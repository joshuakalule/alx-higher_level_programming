>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

normal case 1
>>> m = [[2, 4], [2, 4]]
>>> matrix_divided(m, 2)
[[1.0, 2.0], [1.0, 2.0]]
>>> m
[[2, 4], [2, 4]]

normal case 2
>>> m = [[22, 14], [22, 14]]
>>> matrix_divided(m, 7)
[[3.14, 2.0], [3.14, 2.0]]
>>> m
[[22, 14], [22, 14]]

div is a string
>>> matrix_divided(m, 'string')
Traceback (most recent call last):
	...
TypeError: div must be a number

div is zero '0'
>>> matrix_divided(m, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

matrix irregular size
>>> m = [[1, 2], [3, 4, 5]]
>>> matrix_divided(m, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

matrix with non list element
>>> m = [0, [1, 2], [1, 2]]
>>> matrix_divided(m, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix with a list with a non int/float
>>> m = [[1, 2, 3], ['a', 4, 5]]
>>> matrix_divided(m, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

infinity element in list
>>> matrix_divided([[float('inf'), 4], [2, 4]], 2)
[[0.0, 2.0], [1.0, 2.0]]

missing 1 argument
>>> matrix_divided(2)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

missing 2 arguments
>>> matrix_divided()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
